<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RserveCLI2</name>
    </assembly>
    <members>
        <member name="M:RserveCLI2.Async.DeepEnumerateInnerExceptions(System.AggregateException)">
            <remarks>
            This is similar to <see cref="M:System.AggregateException.Flatten"/> except
            it flattens the inner exceptions lazily.
            </remarks>
        </member>
        <member name="E:RserveCLI2.FaultedTask.UnhandledTaskException">
            <remarks>
            The execution of this event's handler is not synchronized with
            the context.
            </remarks>
        </member>
        <member name="T:RserveCLI2.RserveException">
            <summary>
            The exception that is thrown when the client or server encounters an error.
            </summary>
            <remarks>
            Used for communication errors and when expectations on transmitted data are not met.
            </remarks>
        </member>
        <member name="M:RserveCLI2.RserveException.#ctor">
            <summary>
            Initializes a new instance of the RserveException class.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RserveException class with the specified error message.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the RserveException class with the specified error message,
            and a reference to the inner exception that is the cause of this exception.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the RserveException class with the specified message,
            and the server error code.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the RserveException class with serialized data.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.op_Implicit(RserveCLI2.RserveException)~System.String">
            <summary>
            Supports implicit casting to string
            </summary>
        </member>
        <member name="P:RserveCLI2.RserveException.ServerErrorCode">
            <summary>
            Gets the server error code.  
            Returns null if RserveException was constructed without a server error code.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo object with the server error code.
            (Overrides Exception.GetObjectData(SerializationInfo, StreamingContext).)
            </summary>
        </member>
        <member name="M:RserveCLI2.RserveException.ServerErrorCodeDescription(System.Int32)">
            <summary>
            Get the friendly description of a server error code.
            </summary>
        </member>
        <member name="T:RserveCLI2.SexpArrayDate">
            <summary>
            An array of Dates.  Time portion of a date is severed.
            </summary>
        </member>
        <member name="F:RserveCLI2.SexpArrayDate.Origin">
            <summary>
            The origin for R's conversion of dates to ints
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.#ctor">
            <summary>
            Initializes a new instance of SexpArrayDate.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of SexpArrayDate with a DateTime. 
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.#ctor(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Initializes a new instance of SexpArrayDate with IEnumerable of DateTime
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of the SexpArrayDate with dates in R integer format.
            </summary>
            <remarks>
            Should only be called from Qap1.DecodeSexp.  The class attribute will be added after this class is constructed.
            If its constructed now, then there will be an exception inserting duplicate key into Dictionary
            </remarks>
        </member>
        <member name="P:RserveCLI2.SexpArrayDate.AsDate">
            <summary>
            Gets as DateTime.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDate.AsDates">
            <summary>
            Gets as array of Date.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDate.Value">
            <summary>
            Gets the dates stored in the list
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDate.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection
            </summary>
            <param name="item">The object to add to the ICollection.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the IList.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. Use with caution--this is more a rapid prototyping than
            a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.DateToRInt(System.DateTime)">
            <summary>
            Converts a DateTime into an R integer
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDate.RIntToDate(System.Int32)">
            <summary>
            Converts a DateTime into an R integer
            </summary>
        </member>
        <member name="T:RserveCLI2.SexpQap1Raw">
            <summary>
            A container for Sexps that we don't know how to interpret. This way you can still pass such a Sexp back to Rserve, even though its meaning
            remains opaque.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpQap1Raw.#ctor(System.Byte,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:RserveCLI2.SexpQap1Raw"/> class.
            </summary>
            <param name="type">
            The type of the Sexp as represented by Rserve.
            </param>
            <param name="data">
            The data of the Sexp. Its meaning is opaque.
            </param>
        </member>
        <member name="P:RserveCLI2.SexpQap1Raw.Data">
            <summary>
            Gets the data of the Sexp as sent by Rserve
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpQap1Raw.Type">
            <summary>
            Gets the XT_... type of the Sexp
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpQap1Raw.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpArrayString">
            <summary>
            An array of strings
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.#ctor">
            <summary>
            Initializes a new instance of the SexpArryString.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.#ctor(System.String)">
            <summary>
            Initializes a new instance of SexpArryString with a string.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of SexpArrayString with an IEnumerable of string.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.AsString">
            <summary>
            Gets as string.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.AsStrings">
            <summary>
            Gets as array of string.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
            <returns>
            The number of elements contained in the ICollection.
            </returns>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.IsNa">
            <summary>
            Gets a value indicating whether this instance is NA.
            </summary>
            <value>
            true if this instance is NA; otherwise, false
            </value>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
            <returns>
            true if the ICollection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.Na">
            <summary>
            Gets the NA representation of strings.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.Value">
            <summary>
            Gets the strings stored in the list
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayString.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to be retrieved</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">The object to add to the ICollection.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.CheckNa(System.String)">
            <summary>
            Checks whether a value is NA.
            </summary>
            <param name="x">The value to be checked.</param>
            <returns>
            True if the value is NA, false otherwise.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>
            true if the specified object is equal to this instance; otherwise, false.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Equals(RserveCLI2.SexpArrayString)">
            <summary>
            Determines whether the specified SexpArrayInt is equal to this instance.
            </summary>
            <returns>
            true if the specified SexpArrayString is equal to this instance; otherwise, false.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the IList.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. 
            Use with caution--this is more a rapid prototyping than a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayString.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpArrayDouble">
            <summary>
            An array of double-precision floating-point values
            </summary>
            <remarks>
            Uses double.NaN to represent NA
            </remarks>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RserveCLI2.SexpArrayDouble"/> class.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RserveCLI2.SexpArrayDouble"/> class.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:RserveCLI2.SexpArrayDouble"/> class.
            </summary>
            <param name="theValue">
            The value.
            </param>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.As2DArrayDouble">
            <summary>
            Gets the values as a 2-dimensional array
            </summary>
            <remarks>
            This method will only work if the Sexp was originally constructed using a 2-dimensional array.
            </remarks>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.AsDouble">
            <summary>
            Gets as double.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.AsDoubles">
            <summary>
            Gets as an array of double.
            </summary>
            <remarks>
            A matrix is flattenend by columns.  So the order is: Row1Col1, Row2Col1, Row3Col1, ... , Row1Col2, Row2Col2, Row3Col2, ...
            </remarks>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.AsInt">
            <summary>
            Gets as int by converting contained double.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.AsInts">
            <summary>
            Gets as array of int.
            </summary>
            <remarks>
            A matrix is flattenend by columns.  So the order is: Row1Col1, Row2Col1, Row3Col1, ... , Row1Col2, Row2Col2, Row3Col2, ...
            </remarks>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.IsNa">
            <summary>
            Determines if double is NA
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.IsReadOnly">
            <summary>
            Determines if the ICollection is read-only.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.Na">
            <summary>
            Gets the NA value of double.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.Value">
            <summary>
            Gets the doubles stored in the list
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayDouble.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.CheckNa(System.Double)">
            <summary>
            Checks whether a value is NA.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>
            true if the specified object is equal to this instance; otherwise, false.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Equals(RserveCLI2.SexpArrayDouble)">
            <summary>
            Determines whether the specified SexpArrayDouble is equal to this instance.
            </summary>
            <param name="other"></param>
            <returns>
            <c>true</c> if the specified SexpArrayDouble is equal to this instance; otherwise, <c>false</c>.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.GetHashCode">
            <summary>
            Return hash code for this instance.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the IList.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. 
            Use with caution--this is more a rapid prototyping than a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayDouble.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpArrayBool">
            <summary>
            An array of (trivalue, i.e., including NA) booleans.
            </summary>
            <remarks>
            NA is represented as NULL
            </remarks>
        </member>
        <member name="F:RserveCLI2.SexpArrayBool.NaValue">
            <summary>
            The representation of NA
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.#ctor">
            <summary>
            Initializes a new instance of SexpArrayBool.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of SexpArrayBool with a nullable bool.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.#ctor(System.Collections.Generic.IEnumerable{System.Nullable{System.Boolean}})">
            <summary>
            Initializes a new instance of SexpArrayBool with an IEnumerable of nullable bool.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.AsBool">
            <summary>
            Gets as a nullable bool.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.AsBools">
            <summary>
            Gets as an array of nullable bool.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.AsByte">
            <summary>
            Gets the bool value as byte that R can interpret.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.IsNa">
            <summary>
            Determines if the value of this bool is NA
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.IsReadOnly">
            <summary>
            Determines if the ICollection is read-only.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.Na">
            <summary>
            Gets the representation of NA
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.Value">
            <summary>
            Gets the values stored in the list
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayBool.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">The object to add to the ICollection.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.CheckNa(System.Nullable{System.Boolean})">
            <summary>
            Checks whether a value is NA.
            </summary>
            <param name="x">The value to be checked.</param>
            <returns>
            True if the value is NA, false otherwise.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>
            true if the specified object is equal to this instance; otherwise, false.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.Equals(RserveCLI2.SexpArrayBool)">
            <summary>
            Determines whether the specified SexpArrayBool is equal to this instance.
            </summary>
            <param name="other"></param>
            <returns>
            <c>true</c> if the specified SexpArrayBool is equal to this instance; otherwise, <c>false</c>.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.GetHashCode">
            <summary>
            Gets hash code.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">The object to insert into the IList.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. 
            Use with caution--this is more a rapid prototyping than a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayBool.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpArrayInt">
            <summary>
            An array of integers.
            </summary>
        </member>
        <member name="F:RserveCLI2.SexpArrayInt.NaValue">
            <summary>
            The special values that marks an integer as NA.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.#ctor">
            <summary>
            Initializes a new instance of SexpArrayInt.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of SexpArrayInt with an int.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of SexpArrayInt with an IEnumerable of int
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.As2DArrayInt">
            <summary>
            Gets the values as a 2-dimensional array
            </summary>
            <remarks>
            This method will only work if the Sexp was originally constructed using a 2-dimensional array.
            </remarks>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.AsDouble">
            <summary>
            Gets as double.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.AsDoubles">
            <summary>
            Gets as array of double
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.AsInt">
            <summary>
            Gets as int.
            </summary>
            <value>
            The value as an integer.
            </value>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.AsInts">
            <summary>
            Gets as array of int.
            </summary>
            <remarks>
            A matrix is flattenend by columns.  So the order is: Row1Col1, Row2Col1, Row3Col1, ... , Row1Col2, Row2Col2, Row3Col2, ...
            </remarks>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.IsNa">
            <summary>
            Determines if the value of this integer is NA.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.IsReadOnly">
            <summary>
            Determines whether the ICollection is read-only.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.Na">
            <summary>
            Gets a representation of the NA value.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.Value">
            <summary>
            Gets the integers stored in the list
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpArrayInt.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">The object to add to the ICollection.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.CheckNa(System.Int32)">
            <summary>
            Checks whether a value is NA.
            </summary>
            <param name="x">The value to be checked.</param>
            <returns>
            True if the value is NA, false otherwise.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>
            true if the specified object is equal to this instance; otherwise, false.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Equals(RserveCLI2.SexpArrayInt)">
            <summary>
            Determines whether the specified SexpArrayInt is equal to this instance.
            </summary>
            <param name="other"></param>
            <returns>
            <c>true</c> if the specified SexpArrayInt is equal to this instance; otherwise, <c>false</c>.
            Does not check for attribute equality.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.GetHashCode">
            <summary>
            Gets hash code.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the IList.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. 
            Use with caution--this is more a rapid prototyping than a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpArrayInt.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpTaggedList">
            <summary>
            A tagged list.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.#ctor">
            <summary>
            Initializes a new instance of SexpTaggedList.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp}})">
            <summary>
            Initializes a new instance of SexpTaggedList with an IEnumerable of KeyValuePair of string,Sexp
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.IsReadOnly">
            <summary>
            Determines if the ICollection is read-only.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
            <returns>
            An ICollection containing the keys of the object that implements IDictionary.
            </returns>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
            <returns>
            An ICollection containing the values in the object that implements IDictionary.
            </returns>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.Value">
            <summary>
            Gets the values stored in the tagged list
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to be retrieved</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="P:RserveCLI2.SexpTaggedList.Item(System.String)">
            <summary>
            Gets or sets the element with a specific name
            </summary>
            <param name="key">The name of the element to be retrieved</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">The object to add to the ICollection.</param>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Add(System.String,RserveCLI2.Sexp)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Contains(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp})">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.ContainsKey(System.String)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the IDictionary.</param>
            <returns>
            true if the IDictionary contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.CopyTo(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key"/> was not found in the original IDictionary.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.Remove(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp})">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.TryGetValue(System.String,RserveCLI2.Sexp@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements IDictionary contains an element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpTaggedList.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,RserveCLI2#Sexp}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpList">
            <summary>
            A List that can contain Sexps of various types. This is the basis for data frames, too.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpList.#ctor">
            <summary>
            Initializes a new instance of SexpList.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpList.#ctor(System.Collections.Generic.IEnumerable{RserveCLI2.Sexp})">
            <summary>
            Initializes a new instance SexpList with an IEnumerable of Sexp
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpList.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpList.IsReadOnly">
            <summary>
            Determines if the ICollection is read-only.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpList.Value">
            <summary>
            Gets Value.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpList.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to be retrieved</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpList.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">The object to add to the ICollection.</param>
        </member>
        <member name="M:RserveCLI2.SexpList.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpList.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpList.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpList.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpList.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">
            The object to insert into the IList.
            </param>
        </member>
        <member name="M:RserveCLI2.SexpList.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">The object to remove from the ICollection.</param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpList.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="T:RserveCLI2.SexpGenericList">
            <summary>
            Functionality for list-like Sexps.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpGenericList.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">The object to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified object is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpGenericList.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpGenericList.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.SexpSymname">
            <summary>
            A Sexp for Symnames. Same as a string, but can't be NA.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpSymname.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SexpSymname class with a string.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpSymname.AsString">
            <summary>
            Gets as string.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpSymname.AsStrings">
            <summary>
            Gets as array of string.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpSymname.Value">
            <summary>
            Gets the value of the symname
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpSymname.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. 
            Use with caution--this is more a rapid prototyping than a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpSymname.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:RserveCLI2.DES">
            <summary>
            DES Encryption algorithm.
            Based on FreeBSD's libcrypt:
               secure/lib/libcrypt/crypt-des.c
            </summary>
        </member>
        <member name="M:RserveCLI2.DES.Encrypt(System.String,System.String)">
            <summary>
            This method encrypt the given string with the salt indicated, using DES Algorithm
            </summary>
            <param name="k">
            The string to be encrypted.
            </param>
            <param name="s">
            The salt.
            </param>
            <returns>
            The encrypted string.
            </returns>
        </member>
        <member name="T:RserveCLI2.Sexp">
            <summary>
            A local representation for an S-Expression (a.k.a., Sexp, Rexp, R-expression).
            </summary>
        </member>
        <member name="F:RserveCLI2.Sexp._attributes">
            <summary>
            The Sexp attributes, if any
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.AsBool">
            <summary>
            Gets a value as a nullable bool.
            </summary>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Nullable{System.Boolean}">
            <summary>
            Syntactic sugar for explicit conversion to bool
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsBools">
            <summary>
            Gets a value as an array of nullable bool.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.AsDictionary">
            <summary>
            Gets as dictionary of objects.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.AsDouble">
            <summary>
            Gets as double.
            </summary>
            <value>
            As double.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Double">
            <summary>
            Syntactic sugar for explicit conversion to double
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsDoubles">
            <summary>
            Gets as array of double.
            </summary>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Double[]">
            <summary>
            Syntactic sugar for explicit conversion to double
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsInt">
            <summary>
            Gets as int.
            </summary>
            <value>
            The value as an integer.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Int32">
            <summary>
            Syntactic sugar for explicit conversion to int
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.As2DArrayDouble">
            <summary>
            Gets as double.
            </summary>
            <value>
            As double.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Double[0:,0:]">
            <summary>
            Syntactic sugar for explicit conversion to double
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsInts">
            <summary>
            Gets as int.
            </summary>
            <value>
            The value as an integer.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Int32[]">
            <summary>
            Syntactic sugar for explicit conversion to int
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.As2DArrayInt">
            <summary>
            Gets as int.
            </summary>
            <value>
            The value as an integer.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.Int32[0:,0:]">
            <summary>
            Syntactic sugar for explicit conversion to int
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsDate">
            <summary>
            Gets as date.
            </summary>
            <value>
            The value as an integer.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.DateTime">
            <summary>
            Syntactic sugar for explicit conversion to int
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsDates">
            <summary>
            Gets as date.
            </summary>
            <value>
            The value as an integer.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.DateTime[]">
            <summary>
            Syntactic sugar for explicit conversion to int
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsList">
            <summary>
            Gets as list of objects.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.AsSexpDictionary">
            <summary>
            Gets as dictionary of Sexps.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.AsString">
            <summary>
            Gets as string.
            </summary>
            <value>
            As string.
            </value>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.String">
            <summary>
            Syntactic sugar for explicit conversion to string
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.AsStrings">
            <summary>
            Gets as Strings.
            </summary>
        </member>
        <member name="M:RserveCLI2.Sexp.op_Explicit(RserveCLI2.Sexp)~System.String[]">
            <summary>
            Syntactic sugar for explicit conversion to string[]
            </summary>
            <param name="s">The Sexp</param>
            <returns>The converted value</returns>
        </member>
        <member name="P:RserveCLI2.Sexp.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.ColNames">
            <summary>
            Gets colnames of this matrix.
            </summary>
            <remarks>
            If none, returns null.  This matches R's behavior.  
            For example, both colnames( matrix( 1 ) ) and colnames( c( 1 , 2 , 3 ) ) return NULL in R.
            </remarks>
        </member>
        <member name="P:RserveCLI2.Sexp.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
            <returns>
            The number of elements contained in the ICollection.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.IsNa">
            <summary>
            Gets a value indicating whether this instance is NA.
            </summary>
            <value>
            <c>true</c> if this instance is NA; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RserveCLI2.Sexp.IsNull">
            <summary>
            Gets a value indicating whether this instance is null.
            </summary>
            <value>
            <c>true</c> if this instance is null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RserveCLI2.Sexp.IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
            <returns>true if the ICollection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
            <returns>
            An ICollection containing the keys of the object that implements IDictionary.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.Names">
            <summary>
            Gets the names.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.Rank">
            <summary>
            Gets the rank. E.g., a plain list has a rank of 1 and a matrix has a rank of 2.
            </summary>
        </member>
        <member name="P:RserveCLI2.Sexp.RowNames">
            <summary>
            Gets rownames of this matrix.
            </summary>
            <remarks>
            If none, returns null.  This matches R's behavior.  
            For example, both rownames( matrix( 1 ) ) and rownames( c( 1 , 2 , 3 ) ) return NULL in R.
            </remarks>
        </member>
        <member name="P:RserveCLI2.Sexp.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
            <returns>
            An ICollection containing the values in the object that implements IDictionary.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.System#Collections#Generic#IDictionary{System#String,System#Object}#Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
            <returns>
            An ICollection containing the values in the object that implements IDictionary.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="row">The zero-based row index.</param>
            <param name="col">The zero-based column index.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.Item(System.String)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="key">The name of the value.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.System#Collections#Generic#IList{System#Object}#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="P:RserveCLI2.Sexp.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="key">The name of the element.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Object)">
            <summary>
            Makes a Sexp from an object.
            </summary>
            <param name="x">The object to convert into an Sexp.</param>
            <returns>
            The Sexp made.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Nullable{System.Boolean})">
            <summary>
            Makes a SexpArrayBool from a bool.
            </summary>
            <param name="x">The bool to convert into an SexpArrayBool.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IEnumerable{System.Nullable{System.Boolean}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayBool from a bool.
            </summary>
            <param name="names">Vector names</param>
            <param name="x">The IEnumerable of bool to convert into an SexpArrayBool.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Int32)">
            <summary>
            Makes a SexpArrayInt from an int.
            </summary>
            <param name="x">The int to convert into an SexpArrayInt.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayInt from an IEnumerable of int.
            </summary>
            <param name="xs">The IEnumerable of int to convert into an SexpArrayInt.</param>
            <param name="names">Vector names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.DateTime)">
            <summary>
            Makes a SexpArrayDate from a DateTime.
            </summary>
            <param name="x">The DateTime to convert into an SexpArrayDate.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IEnumerable{System.DateTime},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayDate from an IEnumerable of DateTime
            </summary>
            <param name="xs">The IEnumerable of DateTime to convert into an SexpArrayDate.</param>
            <param name="names">Vector names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Decimal)">
            <summary>
            Makes a SexpArrayDouble from a decimal.
            </summary>
            <param name="x">The decimal to convert into an SexpArrayDouble.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IEnumerable{System.Decimal},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayDouble from an IEnumerable of decimal.
            </summary>
            <param name="xs">The IEnumerable of decimal to convert into an SexpArrayDouble.</param>
            <param name="names">Vector names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Decimal[0:,0:],System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayDouble Sexp from a matrix of decimal.
            </summary>
            <param name="xs">The matrix of decimal.</param>
            <param name="rowNames">Matrix row names</param>
            <param name="colNames">Matrix column names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Double)">
            <summary>
            Makes a SexpArrayDouble from a double.
            </summary>
            <param name="x">The double to convert into an SexpArrayDouble.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayDouble from an IEnumerable of double.
            </summary>
            <param name="xs">The IEnumerable of double to convert into an SexpArrayDouble.</param>
            <param name="names">Vector names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Double[0:,0:],System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayDouble from a matrix of double.
            </summary>
            <param name="xs">The matrix of double.</param>
            <param name="rowNames">Matrix row names</param>
            <param name="colNames">Matrix column names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Int32[0:,0:],System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayInt from a matrix of int.
            </summary>
            <param name="xs">The matrix of int.</param>
            <param name="rowNames">Matrix row names</param>
            <param name="colNames">Matrix column names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.String)">
            <summary>
            Makes a SexpArrayString from a string.
            </summary>
            <param name="x">The string to convert into an SexpArrayString.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a SexpArrayString from an IEnumerable of string.
            </summary>
            <param name="xs">The IEnumerable of string to convert into an SexpArrayString.</param>
            <param name="names">Vector names</param>
        </member>
        <member name="M:RserveCLI2.Sexp.Make(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a SexpList from a Dictionary.
            </summary>
            <param name="xs">The Dictionary to convert into an SexpList.</param>
        </member>
        <member name="M:RserveCLI2.Sexp.MakeDataFrame(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Makes a data frame.
            </summary>
            <param name="columns">
            The columns.
            </param>
            <param name="rowNames">
            The row names.
            </param>
            <returns>
            Sexp of data frame
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
            <param name="obj">
            The object to compare with this instance.
            </param>
            <returns>
            <c>true</c> if the specified object is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.GetLength(System.Int32)">
            <summary>
            Gets the length of an array-like object with respect to a given dimension.
            </summary>
            <param name="dim">
            The zero-based index of the dimension.
            </param>
            <returns>
            Length of the object in the dimension requested.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. Use with caution--this is more a rapid prototyping than
            a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">
            The object to add to the ICollection.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">
            The object to locate in the ICollection.
            </param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">
            The array.
            </param>
            <param name="arrayIndex">
            Index of the array.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">
            The object to remove from the ICollection.
            </param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Add(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp})">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">
            The object to add to the ICollection.
            </param>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Contains(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp})">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">
            The object to locate in the ICollection.
            </param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.CopyTo(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">
            The array.
            </param>
            <param name="arrayIndex">
            Index of the array.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Remove(System.Collections.Generic.KeyValuePair{System.String,RserveCLI2.Sexp})">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">
            The object to remove from the ICollection.
            </param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Add(System.Object)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">
            The object to add to the ICollection.
            </param>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Contains(System.Object)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">
            The object to locate in the ICollection.
            </param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">
            The array.
            </param>
            <param name="arrayIndex">
            Index of the array.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">
            The object to remove from the ICollection.
            </param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Add(RserveCLI2.Sexp)">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">
            The object to add to the ICollection.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">
            The object to locate in the ICollection.
            </param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">
            The array.
            </param>
            <param name="arrayIndex">
            Index of the array.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.Remove(RserveCLI2.Sexp)">
            <summary>
            Removes the first occurrence of a specific object from the ICollection.
            </summary>
            <param name="item">
            The object to remove from the ICollection.
            </param>
            <returns>
            true if item was successfully removed from the ICollection; otherwise, false. This method also returns false if item is not found in the original ICollection.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The ICollection is read-only.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
            <param name="key">
            The object to use as the key of the element to add.
            </param>
            <param name="value">
            The object to use as the value of the element to add.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">
            The key whose value to get.
            </param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            true if the object that implements IDictionary contains an element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Add(System.String,RserveCLI2.Sexp)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
            <param name="key">
            The object to use as the key of the element to add.
            </param>
            <param name="value">
            The object to use as the value of the element to add.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.ContainsKey(System.String)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
            <param name="key">
            The key to locate in the IDictionary.
            </param>
            <returns>
            true if the IDictionary contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
            <param name="key">
            The key of the element to remove.
            </param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key"/> was not found in the original IDictionary.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.TryGetValue(System.String,RserveCLI2.Sexp@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">
            The key whose value to get.
            </param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            true if the object that implements IDictionary contains an element with the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:RserveCLI2.Sexp.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,RserveCLI2#Sexp}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.System#Collections#Generic#IEnumerable{System#Object}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">
            The object to locate in the IList.
            </param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">
            The object to insert into the IList.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.IndexOf(RserveCLI2.Sexp)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">
            The object to locate in the IList.
            </param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:RserveCLI2.Sexp.Insert(System.Int32,RserveCLI2.Sexp)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            <param name="item">
            The object to insert into the IList.
            </param>
        </member>
        <member name="M:RserveCLI2.Sexp.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the item to remove.
            </param>
        </member>
        <member name="T:RserveCLI2.Qap1">
            <summary>
            An implementation of the QAP1 protocol used to communicate with Rserve
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.DtInt">
            <summary>
            Int data
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.DtString">
            <summary>
            String data
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.DtByteStream">
            <summary>
            Byte stream data
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.DtSexp">
            <summary>
            The data stream containts a Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.DtLarge">
            <summary>
            Large data flag
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtNull">
            <summary>
            The Sexp is NULL
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtS4">
            <summary>
            S4 object Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtVector">
            <summary>
            Vector Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtClos">
            <summary>
            Closure Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtSymName">
            <summary>
            Symbol name Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtListNoTag">
            <summary>
            List without tags
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtListTag">
            <summary>
            List with tags
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtLangNoTag">
            <summary>
            Lang without tags
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtLangTag">
            <summary>
            Lang with tags
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtVectorExp">
            <summary>
            Vector expression
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtVectorStr">
            <summary>
            Vector string
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtArrayInt">
            <summary>
            Array of integers
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtArrayDouble">
            <summary>
            Array of doubles
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtArrayString">
            <summary>
            Array of strings
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtArrayBoolUa">
            <summary>
            Array of Bool UA
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtArrayBool">
            <summary>
            Array of Bool
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtRaw">
            <summary>
            The Sexp contains raw data
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtArrayComplex">
            <summary>
            Array of complex
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtUnknown">
            <summary>
            Unknown data type
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtLarge">
            <summary>
            The length of the Sexp is coded as a 56-bit integer, enlarging the header by 4 bytes
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.XtHasAttr">
            <summary>
            Flag for the presence of attributes
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrAuthFailed">
            <summary>
            auth.failed or auth.requested but no login came.
            in case of authentification failure due to name/pwd mismatch,
            server may send CMD_accessDenied instead
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrConnBroken">
            <summary>
            connection closed or broken packet killed it
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrInvCmd">
            <summary>
            unsupported/invalid command
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrInvPar">
            <summary>
            Some parameters are invalid
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrRerror">
            <summary>
            R-error occured, usually followed by connection shutdown
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrIoError">
            <summary>
            I/O error
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrNotOpen">
            <summary>
            Attempt to perform fileRead/Write on closed file.
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrAccessDenied">
            <summary>
            This answer is also valid onC MD_login; otherwise it's sent if the server doesn't
            allow the user to issue the specified command.
            (e.g. some server admins may block file I/O operations for some users)
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrUnsupportedCmd">
            <summary>
            Unsupported command
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrUnknownCmd">
            <summary>
            unknown command - the difference between unsupported and unknown is that unsupported commands
            are known to the server but for some reasons (e.g. platform dependent) it's not supported.
            unknown commands are simply not recognized by the server at all.
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrDataOverflow">
            <summary>
            incoming packet is too big. currently there is a limit as of the size of an incoming packet.
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrObjectTooBig">
            <summary>
            The requested object is too big to be transported in that way.
            If received after CMD_eval then the evaluation itself was successful.
            Optional parameter is the size of the object
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrOutOfMem">
            <summary>
            Out of memory. the connection is usually closed after this error was sent.
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrCtrlClosed">
            <summary>
            control pipe to the master process is closed or broken
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrSessionBusy">
            <summary>
            session is still busy
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrDetachFailed">
            <summary>
            Unable to detach seesion (cannot determine peer IP or problems creating a listening socket for resume)
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrDisabled">
            <summary>
            feature is disabled
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrUnavailable">
            <summary>
            feature is not present in this build
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrCryptError">
            <summary>
            crypto-system error
            </summary>
        </member>
        <member name="F:RserveCLI2.Qap1.ErrSecurityClose">
            <summary>
            server-initiated close due to security violation (too many attempts, excessive timeout etc.)
            </summary>
        </member>
        <member name="M:RserveCLI2.Qap1.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the Qap1 class.
            </summary>
            <param name="socket">The socket through which we'll communicate with the server.</param>
        </member>
        <member name="M:RserveCLI2.Qap1.CommandReadStreamAsync(System.Int32,System.Collections.Generic.IList{System.Object})">
            <summary>
            Send a command and read the stream it returns (used for reading files)
            </summary>
            <param name="cmd">Command to be sent to the server</param>
            <param name="data">Arguments for the command</param>
            <returns>The data read</returns>
        </member>
        <member name="M:RserveCLI2.Qap1.CommandAsync(System.Int32,System.Collections.Generic.IList{System.Object})">
            <summary>
            Send a command and read the result
            </summary>
            <param name="cmd">Command to be sent to the server</param>
            <param name="data">Arguments for the command</param>
            <returns>The result, parsed into appropriate objects (string or Sexp)</returns>
        </member>
        <member name="F:RserveCLI2.Qap1._socket">
            <summary>
            The socket used to communicate with Rserve
            </summary>
        </member>
        <member name="M:RserveCLI2.Qap1.SubmitCommandAsync(System.Int32,System.Collections.Generic.IList{System.Object})">
            <summary>
            Submit a command to Rserve
            </summary>
            <param name="cmd">The command to be submitted to the server</param>
            <param name="data">The arguments for the command</param>
            <returns>Length of the response in bytes</returns>
        </member>
        <member name="M:RserveCLI2.Qap1.EncodeSexp(RserveCLI2.Sexp)">
            <summary>
            Encode a Sexp in Qap1 format
            </summary>
            <param name="s">The Sexp to be encoded</param>
            <returns>QAP4-encoded bit stream</returns>
        </member>
        <member name="M:RserveCLI2.Qap1.DecodeSexp(System.Byte[],System.Int64@)">
            <summary>
            Decode a Qap1-encoded Sexp
            </summary>
            <param name="data">The byte stream in which the Sexp is encoded</param>
            <param name="start">At which index of data does the Sexp begin?</param>
            <returns>The decoded Sexp.</returns>
        </member>
        <member name="T:RserveCLI2.RConnection">
            <summary>
            A connection to an R session
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdAssignSexp">
            <summary>
            Assign a Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdAttachSession">
            <summary>
            Attach session
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdCloseFile">
            <summary>
            Close a file
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdCreateFile">
            <summary>
            Create a file for writing
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdCtrlEval">
            <summary>
            Control command Evaluate
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdCtrlShutdown">
            <summary>
            Control command Shutdown
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdCtrlSource">
            <summary>
            Control command Source
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdDetachedVoidEval">
            <summary>
            Detached evaluation without returning a result
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdDettachSession">
            <summary>
            Detach session, but keep it around
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdEval">
            <summary>
            Evaluate a Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdLogin">
            <summary>
            Login with username and password
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdOpenFile">
            <summary>
            Open a file for reading
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdReadFile">
            <summary>
            Read from an open file
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdRemoveFile">
            <summary>
            Remove a file
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdSetBufferSize">
            <summary>
            Set buffer size
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdSetEncoding">
            <summary>
            Set Encoding (I recommend UTF8)
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdSetSexp">
            <summary>
            Set a Sexp
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdShutdown">
            <summary>
            Shut down the Server
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdVoidEval">
            <summary>
            Evaluate without returning a result
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection.CmdWriteFile">
            <summary>
            Write to an open file
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection._socket">
            <summary>
            The socket we use to talk to Rserve
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection._connectionParameters">
            <summary>
            The connection parameters we received from Rserve
            </summary>
        </member>
        <member name="F:RserveCLI2.RConnection._protocol">
            <summary>
            The protocol that handles communication for us
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the RConnection class.
            </summary>
            <param name="hostname">
            Hostname of the server
            </param>
            <param name="port">
            Port on which Rserve listens
            </param>
            <param name="user">
            User name for the user, or nothing for no authentication
            </param>
            <param name="password">
            Password for the user, or nothing
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.#ctor(System.Net.IPAddress,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the RConnection class.
            </summary>
            <param name="addr">
            Address of the Rserve server, or nothing for localhost
            </param>
            <param name="port">
            Port on which Rserve listens
            </param>
            <param name="user">
            User name for the user, or nothing for no authentication
            </param>
            <param name="password">
            Password for the user, or nothing
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.Connect(System.String,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Connects to Rserve identified by host name.
            </summary>
            <param name="hostname">
            Hostname of the server
            </param>
            <param name="port">
            Port on which Rserve listens
            </param>
            <param name="credentials">
            Credentials for authentication or <c>null</c> for anonymous
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.ConnectAsync(System.String,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Asynchronously connects to Rserve identified by host name.
            </summary>
            <param name="hostname">
            Hostname of the server
            </param>
            <param name="port">
            Port on which Rserve listens
            </param>
            <param name="credentials">
            Credentials for authentication or <c>null</c> for anonymous
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.Connect(System.Net.IPAddress,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Connects to Rserve identified by an IP address.
            </summary>
            <param name="addr">
            Address of the Rserve server, or nothing for localhost
            </param>
            <param name="port">
            Port on which the server listens
            </param>
            <param name="credentials">
            Credentials for authentication or <c>null</c> for anonymous
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.ConnectAsync(System.Net.IPAddress,System.Int32,System.Net.NetworkCredential)">
            <summary>
            Asynchronously connects to Rserve identified by an IP address.
            </summary>
            <param name="addr">
            Address of the Rserve server, or nothing for localhost
            </param>
            <param name="port">
            Port on which the server listens
            </param>
            <param name="credentials">
            Credentials for authentication or <c>null</c> for anonymous
            </param>
        </member>
        <member name="P:RserveCLI2.RConnection.Item(System.String)">
            <summary>
            Syntactic sugar for variable assignment and expression evaluation.
            </summary>
            <param name="s">The variable to be assigned to or the expression to be evaluated</param>
            <returns>The value of the expression</returns>
        </member>
        <member name="M:RserveCLI2.RConnection.Assign(System.String,RserveCLI2.Sexp)">
            <summary>
            Assign an R variable on the server. this[symbol] = value is syntactic sugar for this operation.
            </summary>
            <param name="symbol">
            Variable name
            </param>
            <param name="val">
            Sexp to be assigned to the variable
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.AssignAsync(System.String,RserveCLI2.Sexp)">
            <summary>
            Asynchronously assign an R variable on the server.
            </summary>
            <param name="symbol">
            Variable name
            </param>
            <param name="val">
            Sexp to be assigned to the variable
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.Eval(System.String)">
            <summary>
            Evaluate an R command and return the result. this[string] is syntactic sugar for the same operation.
            </summary>
            <param name="s">
            Command to be evaluated
            </param>
            <returns>
            Sexp that resulted from the command
            </returns>
        </member>
        <member name="M:RserveCLI2.RConnection.EvalAsync(System.String)">
            <summary>
            Asynchronously evaluate an R command and return the result.
            </summary>
            <param name="s">
            Command to be evaluated
            </param>
            <returns>
            Sexp that resulted from the command
            </returns>
        </member>
        <member name="M:RserveCLI2.RConnection.ReadFile(System.String)">
            <summary>
            Read a file from the server
            </summary>
            <param name="fileName">
            Name of the file to be read. Avoid jumping across directories.
            </param>
            <returns>
            Stream with the file data.
            </returns>
        </member>
        <member name="M:RserveCLI2.RConnection.ReadFileAsync(System.String)">
            <summary>
            Asynchronously read a file from the server
            </summary>
            <param name="fileName">
            Name of the file to be read. Avoid jumping across directories.
            </param>
            <returns>
            Stream with the file data.
            </returns>
        </member>
        <member name="M:RserveCLI2.RConnection.RemoveFile(System.String)">
            <summary>
            Delete a file from the server
            </summary>
            <param name="fileName">
            Name of the file to be deleted
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.RemoveFileAsync(System.String)">
            <summary>
            Asynchronously delete a file from the server
            </summary>
            <param name="fileName">
            Name of the file to be deleted
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.VoidEval(System.String)">
            <summary>
            Evaluate an R command and don't return the result (for efficiency)
            </summary>
            <param name="s">
            R command tp be evaluated
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.VoidEvalAsync(System.String)">
            <summary>
            Asynchronously evaluate an R command and don't return the result (for efficiency)
            </summary>
            <param name="s">
            R command tp be evaluated
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.WriteFile(System.String,System.IO.Stream)">
            <summary>
            Write a file to the server.
            Note: It'd be better to return a Stream object to be written to, but Rserve doesn't seem to support an asynchronous connection
            for file reading and writing.
            </summary>
            <param name="fileName">
            Name of the file to be written. Avoid jumping across directories.
            </param>
            <param name="data">
            Data to be written to the file
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.WriteFileAsync(System.String,System.IO.Stream)">
            <summary>
            Asynchronously write a file to the server.
            Note: It'd be better to return a Stream object to be written to, but Rserve doesn't seem to support an asynchronous connection
            for file reading and writing.
            </summary>
            <param name="fileName">
            Name of the file to be written. Avoid jumping across directories.
            </param>
            <param name="data">
            Data to be written to the file
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.Shutdown">
            <summary>
            Attempt to shut down the server process cleanly.
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.ShutdownAsync">
            <summary>
            Asynchronously attempt to shut down the server process cleanly.
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.ServerShutdown">
            <summary>
            Attempt to shut down the server process cleanly.
            This command is asynchronous!
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.ServerShutdownAsync">
            <summary>
            Attempt to shut down the server process cleanly.
            This command is asynchronous, including its transmission!
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.Dispose">
            <summary>
            Dispose of the connection
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.InitAsync(System.String,System.String)">
            <summary>
            Common initialization routine called by the constructures
            </summary>
            <param name="user">
            User name, or null for no authentication
            </param>
            <param name="password">
            Password for the user, or null
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.LoginAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Login to Rserver
            </summary>
            <param name="user">
            User name for the user
            </param>
            <param name="password">
            Password for the user
            </param>
            <param name="method">
            pt for plain text
            </param>
            <param name="salt">
            The salt to use to encrypt the password
            </param>
        </member>
        <member name="M:RserveCLI2.RConnection.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Decompile of .NET 4's CopyTo
            </summary>
        </member>
        <member name="M:RserveCLI2.RConnection.CopyTo(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Decompile of .NET 4's InternalCopyTo
            </summary>
        </member>
        <member name="T:RserveCLI2.SexpNull">
            <summary>
            The S NULL Value
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpNull.Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:RserveCLI2.SexpNull.IsNa">
            <summary>
            Gets a value indicating whether this instance is NA.
            </summary>
            <value>
            true if this instance is NA; otherwise, false
            </value>
        </member>
        <member name="P:RserveCLI2.SexpNull.IsNull">
            <summary>
            Gets a value indicating whether this instance is null.
            </summary>
            <value>
            <c>true</c> if this instance is null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RserveCLI2.SexpNull.IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
            <returns>true if the ICollection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:RserveCLI2.SexpNull.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the object.</param>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpNull.Clear">
            <summary>
            Removes all items from the ICollection.
            </summary>
        </member>
        <member name="M:RserveCLI2.SexpNull.Contains(RserveCLI2.Sexp)">
            <summary>
            Determines whether the ICollection contains a specific value.
            </summary>
            <param name="item">The object to locate in the ICollection.</param>
            <returns>
            true if item is found in the ICollection; otherwise, false.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpNull.CopyTo(RserveCLI2.Sexp[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:RserveCLI2.SexpNull.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A IEnumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpNull.ToNative">
            <summary>
            Converts the Sexp into the most appropriate native representation. 
            Use with caution--this is more a rapid prototyping than a production feature.
            </summary>
            <returns>
            A CLI native representation of the Sexp
            </returns>
        </member>
        <member name="M:RserveCLI2.SexpNull.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="T:Mannex.DelegateExtensions">
            <summary>
            Extension methods for <see cref="T:System.Delegate"/>.
            </summary>
        </member>
        <member name="M:Mannex.DelegateExtensions.InvokeAsEventHandlerWhileIgnoringErrors``1(System.Delegate,System.Object,``0)">
            <summary>
            Sequentially invokes each delegate in the invocation list as
            <see cref="T:System.EventHandler`1"/> and ignores exceptions
            thrown during the invocation of any one handler (continuing
            with the next handler in the list).
            </summary>
        </member>
    </members>
</doc>
